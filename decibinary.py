import pandas as pd
df = pd.DataFrame({'grade': {0: 10,1: 12,2: 10,3: 9,4: 10,5: 12,6: 10,7: 11,8: 11,9: 12,10: 12,11: 9,12: 12,13: 12,14: 10,15: 11,16: 11,17: 11,18: 10,19: 12,20: 11,21: 10,22: 10,23: 10,24: 11,25: 9,26: 10,27: 9,28: 10,29: 11,30: 12,31: 11,32: 12,33: 12,34: 12,35: 9,36: 11,37: 10,38: 11,39: 10,40: 12,41: 12,42: 11,43: 11,44: 11,45: 9,46: 12,47: 12,48: 9,49: 10,50: 10,51: 12,52: 9,53: 11,54: 11,55: 11,56: 12,57: 10,58: 12,59: 12,60: 12,61: 9,62: 10,63: 12,64: 10,65: 12,66: 12,67: 10,68: 10,69: 10,70: 10,71: 10,72: 11,73: 12,74: 11,75: 9,76: 11,77: 12,78: 11,79: 9,80: 9,81: 10,82: 12,83: 10,84: 9,85: 9,86: 12,87: 11,88: 11,89: 10,90: 12,91: 9,92: 11,93: 9,94: 12,95: 11,96: 11,97: 10,98: 12,99: 11,100: 9,101: 12,102: 12,103: 11,104: 11,105: 12,106: 11,107: 10,108: 11,109: 9,110: 10,111: 10,112: 11,113: 10,114: 9,115: 12,116: 12,117: 10,118: 10,119: 12,120: 11,121: 9,122: 11,123: 11,124: 11,125: 9,126: 9,127: 11,128: 11,129: 10,130: 11,131: 9,132: 12,133: 11,134: 10,135: 11,136: 11,137: 12,138: 9,139: 9,140: 9,141: 11,142: 9,143: 9,144: 10,145: 11,146: 11,147: 9,148: 9,149: 11,150: 11,151: 9,152: 11,153: 12,154: 11,155: 9,156: 9,157: 10,158: 9,159: 11,160: 10,161: 10,162: 10,163: 10,164: 11,165: 11,166: 12,167: 11,168: 11,169: 9,170: 11,171: 11,172: 9,173: 9,174: 9,175: 10,176: 11,177: 9,178: 12,179: 9,180: 12,181: 10,182: 11,183: 11,184: 9,185: 12,186: 12,187: 11,188: 10,189: 12,190: 11,191: 10,192: 12,193: 12,194: 11,195: 9,196: 11,197: 11,198: 11,199: 11},
 'test_score': {0: 76,1: 40,2: 7,3: 48,4: 9,5: 46,6: 6,7: 28,8: 18,9: 12,10: 74,11: 90,12: 39,13: 8,14: 60,15: 12,16: 43,17: 71,18: 37,19: 90,20: 22,21: 80,22: 81,23: 87,24: 26,25: 2,26: 11,27: 42,28: 76,29: 24,30: 25,31: 51,32: 39,33: 42,34: 11,35: 78,36: 2,37: 27,38: 27,39: 86,40: 0,41: 26,42: 64,43: 78,44: 54,45: 89,46: 77,47: 5,48: 94,49: 65,50: 61,51: 51,52: 17,53: 20,54: 17,55: 54,56: 95,57: 76,58: 47,59: 94,60: 51,61: 21,62: 62,63: 59,64: 63,65: 16,66: 81,67: 6,68: 4,69: 48,70: 19,71: 45,72: 21,73: 64,74: 72,75: 73,76: 53,77: 71,78: 95,79: 16,80: 17,81: 22,82: 27,83: 1,84: 85,85: 34,86: 34,87: 92,88: 79,89: 9,90: 11,91: 11,92: 63,93: 79,94: 57,95: 75,96: 22,97: 9,98: 77,99: 49,100: 52,101: 72,102: 10,103: 48,104: 1,105: 40,106: 10,107: 71,108: 4,109: 73,110: 70,111: 40,112: 39,113: 76,114: 85,115: 89,116: 52,117: 15,118: 30,119: 66,120: 28,121: 0,122: 30,123: 40,124: 76,125: 77,126: 21,127: 17,128: 52,129: 21,130: 76,131: 8,132: 33,133: 65,134: 30,135: 1,136: 49,137: 78,138: 31,139: 95,140: 68,141: 73,142: 45,143: 86,144: 27,145: 81,146: 82,147: 60,148: 17,149: 30,150: 69,151: 17,152: 41,153: 34,154: 26,155: 45,156: 33,157: 87,158: 75,159: 73,160: 0,161: 96,162: 5,163: 50,164: 2,165: 90,166: 40,167: 66,168: 68,169: 34,170: 0,171: 69,172: 56,173: 83,174: 16,175: 98,176: 57,177: 18,178: 50,179: 24,180: 64,181: 77,182: 94,183: 54,184: 30,185: 8,186: 98,187: 80,188: 69,189: 25,190: 67,191: 58,192: 10,193: 87,194: 86,195: 61,196: 65,197: 22,198: 15,199: 24}})

# Enter your code here
# print(df.head())

def get_cumumative_scores(df):
    key = sorted(df['grade'].unique())
    grades = []
    state = []
    result = []
    for item in key:
        sub_df = df.query("grade == {}".format(item))
        p50 = ((len(sub_df.query("test_score <= 50")) / len(sub_df)) * 100) 
        p75 = ((len(sub_df.query("test_score <= 75")) / len(sub_df)) * 100)
        p90 =  ((len(sub_df.query("test_score <= 90")) / len(sub_df)) * 100)
        p100 =  ((len(sub_df.query("test_score <= 100")) / len(sub_df)) * 100)

        print(0.5 * round(p50) / 0.5, 0.5 * round(p75) / 0.5, 0.5 * round(p90) / 0.5, 0.5 * round(p100) / 0.5)
        grades.extend([item, item, item , item])
        state.extend(["<=50", "<=75", "<=90", "<=100"])
        result.extend(["{}%".format(round(p50 * 2) / 2), "{}%".format(p75), "{}%".format(p90), "{}%".format(p100)])
        print(p50, p75, p90, p100)

    return pd.DataFrame.from_dict({'grade': grades, 'test_score': state, 'percentage': result})
        
result_df = get_cumumative_scores(df)
result_df.set_index('grade', inplace= True)
# print(result_df.reset_index().columns.values.tolist() + result_df.reset_index().values.tolist())